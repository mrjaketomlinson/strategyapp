# Generated by Django 5.0.6 on 2024-09-01 21:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0005_timeperiod'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('project', '0003_project_time_period'),
        ('strategy', '0003_businessproblem_time_period_strategy_time_period'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('criterion_type', models.CharField(choices=[('Maximize', 'max'), ('Minimize', 'min')], max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='criterion_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='criterion_modified_by', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.organization')),
            ],
        ),
        migrations.CreateModel(
            name='PlanningEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('score_type', models.CharField(choices=[('Individual', 'individual'), ('Team', 'team')], max_length=50)),
                ('score_value_type', models.CharField(choices=[('T-shirt', 'tshirt'), ('Fibonacci', 'fibonacci'), ('1-10 Scale', 'scale')], max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='planning_event_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='planning_event_modified_by', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.organization')),
                ('scoring_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.team')),
                ('scoring_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('time_period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.timeperiod')),
            ],
        ),
        migrations.CreateModel(
            name='CriterionWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('weight', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='criterion_weight_created_by', to=settings.AUTH_USER_MODEL)),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.criterion')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='criterion_weight_modified_by', to=settings.AUTH_USER_MODEL)),
                ('planning_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.planningevent')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('score', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('criterion_weight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.criterionweight')),
            ],
        ),
        migrations.CreateModel(
            name='PlanningEventStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_chosen', models.BooleanField(default=False)),
                ('override_score', models.PositiveIntegerField(null=True)),
                ('final_score', models.PositiveIntegerField(null=True)),
                ('planning_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.planningevent')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.strategy')),
                ('scores', models.ManyToManyField(to='strategy.score')),
            ],
            options={
                'unique_together': {('planning_event', 'strategy')},
            },
        ),
        migrations.CreateModel(
            name='PlanningEventProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_chosen', models.BooleanField(default=False)),
                ('override_score', models.PositiveIntegerField(null=True)),
                ('final_score', models.PositiveIntegerField(null=True)),
                ('planning_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.planningevent')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('scores', models.ManyToManyField(to='strategy.score')),
            ],
            options={
                'unique_together': {('planning_event', 'project')},
            },
        ),
        migrations.CreateModel(
            name='PlanningEventBusinessProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_chosen', models.BooleanField(default=False)),
                ('override_score', models.PositiveIntegerField(null=True)),
                ('final_score', models.PositiveIntegerField(null=True)),
                ('business_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.businessproblem')),
                ('planning_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strategy.planningevent')),
                ('scores', models.ManyToManyField(to='strategy.score')),
            ],
            options={
                'unique_together': {('planning_event', 'business_problem')},
            },
        ),
    ]
